################################################################################
#
# Name: Basic Data Analysis On the output xml
#
################################################################################

File size

# size on disk
436MB - ../data/cardiff-newport-bristol-bath_england.osm (uncompressed)

# number of lines (though this is not ver useful given the data is xml)
6,173,030

#######################
#
# Name: Tag Count
#
# Description: Provides a count for each xml element tag
# 
#######################

cd ../src
python tagcount.py > ../output/tagcount.json

cat ../output/tagcount.json

{
 'bounds': 1,
 'member': 44811,
 'nd': 2585692,
 'node': 2093098,
 'osm': 1,
 'relation': 1766,
 'tag': 849051,
 'way': 260051
}

# observations:

Nothing too surprising (no unexpected element tags):

- osm is the top level wrapper
- bounds defines a geo square that bounds the set (possibly should test everything is within
- lots of ways with even more nodes as you'd expect (roughly 1:10)
- not many relations ("define logical or geographic relationships between other elements")
- tags are subelements of node, way and relation
- nd is a node reference within a way so not surprising there are more of these than there are ways (roughly 10:1)

For information, this takes approx 28.9 secs to execute (on my virtual machine)

#######################
#
# Name: Key Character Validation
#
# Description: Validates the characters in each against given regular expressions
# to see if they can be loaded into MongoDb
# 
#######################

cd ../src
python tagmongovalidity.py > ../output/tagmongovalidity.json

cat ../output/tagmongovalidity.json

{'lower': 716267, 'lower_colon': 89936, 'other': 42838, 'problemchars': 10}

# observations

So the vast majority are going to be fine, we have 10 problem records to assess and we should find out a little more about the 42,838 (we'll look at these later)

#######################
#
# Name: Distinct Users
#
# Description: Produce a list of distinct contributors (users)
# 
#######################

cd ../src
python distinctusers.py > ../output/distinctusers.json

wc -l ../output/distinctusers.json

1711


cat ../output/distinctusers.json

set(['-AJ',
     '-Anarchy-',
     '0123456789',
     '06038735',
     '1bpostie',
     '2DogsDoyle',
     '31415927',
     '42429',
     '4c6565',
     '5weet5',
     '62ndSilverBeaver',
     'A T R Birkett',
     'AMB',
     'APartlow',
     'ARAnand',
     'A_Snail',
     'Abdoujaparov',
     'Adam Hillmann',
     'Adam1305',
     'AdamJ',
     'AdmiralSausage',
     'Adrian Bowen',
     'Adrian Hobson',
     'Adrian Taylor',
     ...
     ...
     'woozay',
     'wottonmapman',
     'wvdp',
     'xscvxc',
     'xteejx',
     'xybot',
     'xylome',
     'yayu',
     'ylex',
     'ypid',
     'zacmccormick',
     'zenfunk',
     'zeusfaber',
     'zimirrr',
     'zkw',
     'zmarties',
     'zool'])   
     
# observations

So 1711 distinct users, later we will want to know how many contributions each made.       
